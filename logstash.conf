input {
  file {
    path => ["/var/log/network.log"]
    type => "netsyslog"
  }
  
  file {
    path => ["/var/log/system.log"]
    type => "syssyslog"
  }
}

filter {
  if [type] == "netsyslog" {
    
    grok {
        patterns_dir => "/opt/logstash/patterns"
        match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:host_ip} %{DATESTAMP:time_received} NAS_IP=%{IPORHOST:source_device} Port=%{WORD:port} rem_addr=%{WORD:rem_addr} User=%{WORD:user} Flags=%{WORD:special_flags} task_id=%{WORD:task_id} timezone=%{WORD:tzone} service=%{WORD:service} start_time=%{NUMBER} priv-lvl=%{WORD:privilege_level} cmd=%{GREEDYDATA:command}",
                   "message", "%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:host_ip} %{NUMBER}: %{NUMBER}: .%{MONTH} %{MONTHDAY} %{TIME}: %{CISCOFACSEVMNEM} %{GREEDYDATA}",
                   "message", "%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:host_ip} %{CISCOFACSEVMNEM} %{GREEDYDATA}",
                   "message", "%{PADATETIME:timestamp} %{HOST:actualhost} %{PAMESSAGE:firewallmessage}" ]
#                   "message", "%{TIMESTAMP_ISO8601:timestamp} %{IP:host_ip} %{GREEDYDATA}" ]
    }
  if [message] =~ /.*,TRAFFIC,.*/ {
    noop { add_tag => [ "fwlog" ] }
  }  else if [message] =~ /.*cmd=.*/ {
    noop { add_tag => [ "tacacs+" ] }
  } else if [message] =~ /.*%ASA-.*/ {
    noop { add_tag => [ "fwlog" ] }
  } else {
    noop { add_tag => [ "generic_log" ] }
  }
  }

  if "fwlog" in [tags] {
    csv {
      source => "firewallmessage"
      columns => [ "PaloAltoDomain","ReceiveTime","SerialNum","Type","Threat-ContentType","ConfigVersion","GenerateTime","SourceAddress","DestinationAddress","NATSourceIP","NATDestinationIP","Rule","SourceUser","DestinationUser","Application","VirtualSystem","SourceZone","DestinationZone","InboundInterface","OutboundInterface","LogAction","TimeLogged","SessionID","RepeatCount","SourcePort","DestinationPort","NATSourcePort","NATDestinationPort","Flags","IPProtocol","Action","Bytes","BytesSent","BytesReceived","Packets","StartTime","ElapsedTimeInSec","Category","Padding","seqno","actionflags","SourceCountry","DestinationCountry","cpadding","pkts_sent","pkts_received" ]

    }
  }
  
  if [type] == "syssyslog" {
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => [ "message", "%{GREEDYDATA}" ]
      add_tag => [ "system_log" ]
    }
  }
}


output {
  #stdout { codec => rubydebug }
  elasticsearch {
    embedded => true
  }
}
