input {
  file {
    path => ["/var/log/network.log"]
    type => "netsyslog"
  }
}

filter {
  if [type] == "netsyslog" {
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{HOST:actualhost} %{GREEDYDATA:firewallmessage}" ]
      add_tag => [ "fwlog" ]
    }
  }

  if "fwlog" in [tags] {
    csv {
      source => "firewallmessage"
      columns => [ "PaloAltoDomain","ReceiveTime","SerialNum","Type","Threat-ContentType","ConfigVersion","GenerateTime","SourceAddress","DestinationAddress","NATSourceIP","NATDestinationIP","Rule","SourceUser","DestinationUser","Application","VirtualSystem","SourceZone","DestinationZone","InboundInterface","OutboundInterface","LogAction","TimeLogged","SessionID","RepeatCount","SourcePort","DestinationPort","NATSourcePort","NATDestinationPort","Flags","IPProtocol","Action","Bytes","BytesSent","BytesReceived","Packets","StartTime","ElapsedTimeInSec","Category","Padding","seqno","actionflags","SourceCountry","DestinationCountry","cpadding","pkts_sent","pkts_received" ]

    }
  }
  else {
  }
}

output {
  #stdout { codec => rubydebug }
  elasticsearch {
    embedded => true
  }
}
